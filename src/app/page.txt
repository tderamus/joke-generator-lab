'use client'

import { useEffect, useLayoutEffect, useState } from "react";
import { Card } from "react-bootstrap";

function Home() {
  const [uselessJoke, setUseLessJoke] = useState({});

  const getJoke = async () => {
    const response = await fetch(' https://v2.jokeapi.dev/joke/Any?blacklistFlags=nsfw,religious,political,racist,sexist,explicit&type=twopart')
    const randomJoke = await response.json();
    setUseLessJoke(randomJoke);
  }

  useEffect(() => {
    getJoke();
  }, []);

  return (

    <Card style={{ width: '18rem' }}>
      <Card.Body>
        <Card.Text id='joke-text'> </Card.Text>
        <Card.Text id='joke-punchline'> </Card.Text>
      </Card.Body>
    
    <button className="btn btn-success" type="button" id="joke-btn" onClick={() =>{
      const jokeBtn = document.querySelector('#joke-btn');
      const jokeText = document.querySelector('#joke-text');
      const jokePunchLine = document.querySelector('#joke-punchline');

      if (jokeBtn.textContent === 'GET A JOKE'){
        jokeBtn.textContent = 'GET PUNCHLINE';
        jokeText.innerHTML = uselessJoke.setup;
        jokeBtn.setAttribute('id', 'get-joke-punchline');

        jokeBtn.onClick(() => {
          jokeBtn.textContent = "GET NEW JOKE";
          jokePunchLine.innerHTML = uselessJoke.delivery;
          jokeBtn.setAttribute('id', 'get-new-joke')
        })

      } 
      
      
    }}>GET A JOKE</button>
    </Card>
  );
}



export default Home;


const jokeHandler = (event) => {
      if (jokeBtnText === 'GET A JOKE'){
         if (jokeText.textContent = uselessJoke.setup)
          setJokeBtnText('GET PUNCHLINE');
          jokeBtn.setAttribute('id', 'joke-punchline');
          jokeBtn = document.querySelector('#joke-punchline');
         }
      if(punchlineBtnText === 'GET PUNCH LINE'){
        console.log('Puncline Function Running');
        setPunchlineBtnText('GET A JOKE');
        
      }

        }
    useEffect(() => {
      getJoke();
    }, []);

<button className="btn btn-success joke" type="button" onClick={() => getJoke (() => {
        jokeHandler();
      })}>{jokeBtnText}</button>
